CREATE TABLE HW2_DEPARTMENTS LIKE DB2HR.DEPARTMENTS;
CREATE TABLE HW2_EMPLOYEES LIKE DB2HR.EMPLOYEES;

ALTER TABLE HW2_DEPARTMENTS ADD PRIMARY KEY (DEPARTMENT_ID);
ALTER TABLE HW2_EMPLOYEES ADD PRIMARY KEY (EMPLOYEE_ID);
ALTER TABLE HW2_EMPLOYEES ADD FOREIGN KEY (DEPARTMENT_ID) REFERENCES HW2_DEPARTMENTS(DEPARTMENT_ID);

INSERT INTO HW2_DEPARTMENTS SELECT * FROM DB2HR.DEPARTMENTS;
INSERT INTO HW2_EMPLOYEES SELECT * FROM DB2HR.EMPLOYEES;

ALTER TABLE HW2_DEPARTMENTS ADD FOREIGN KEY (MANAGER_ID) REFERENCES HW2_EMPLOYEES(EMPLOYEE_ID);

CREATE OR REPLACE MODULE HW3;
ALTER MODULE HW3 ADD VARIABLE EMP_CURSOR CURSOR CONSTANT (CURSOR
FOR SELECT * FROM HW2_EMPLOYEES);

ALTER MODULE HW3 PUBLISH PROCEDURE Employee_Seeker()
BEGIN
    DECLARE V_EMP ANCHOR ROW HW2_EMPLOYEES;
    DECLARE NEGATIVE_ID CONDITION FOR SQLSTATE '22003';
    DECLARE EXIT HANDLER FOR NEGATIVE_ID
       CALL DBMS_OUTPUT.PUT_LINE('Employee ID is negative');
    DECLARE SQLCODE INT default 0;

    OPEN EMP_CURSOR;
    WHILE SQLCODE = 0 DO
    FETCH EMP_CURSOR INTO V_EMP;
        IF V_EMP.EMPLOYEE_ID < 0 THEN SIGNAL NEGATIVE_ID;
        END IF;
    END WHILE;
END;