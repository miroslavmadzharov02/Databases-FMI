-- Зад. 1. Създайте функция във вашата схема, която по подаден входен параметър цяло
-- положително число връща стойност 0 - ако числото е четно и стойност 1 ако числото е нечетно.
-- Извикайте функцията и изведете на екрана резултата.

CREATE FUNCTION F_IS_ODD(P_NUMBER INT)
RETURNS INT
RETURN MOD(P_NUMBER,2);

SELECT MOD(11,2) FROM SYSIBM.SYSDUMMY1;

SELECT FN3MI0700050.F_IS_ODD(3) FROM SYSIBM.SYSDUMMY1;

BEGIN
    DECLARE V_NUMBER INT;
    DECLARE V_RESULT INT;
    SET V_NUMBER = ?; -- INPUT FROM KEYBOARD
    SET V_RESULT = (SELECT FN3MI0700050.F_IS_ODD(V_NUMBER) FROM SYSIBM.SYSDUMMY1);
    CALL DBMS_OUTPUT.PUT_LINE('NUMBER:' || V_NUMBER || ' IS ' || V_RESULT);
end;

-- Зад. 2. Създайте модул във вашата схема. Добавете променлива към модула. Добавете функция
-- и процедура към модула. Извикайте функцията и процедурите от модула:

CREATE MODULE ZAD2;

--- променливата е от същия тип като номер на служител в таблицата EMPLOYEES (схемата е DB2HR)
ALTER MODULE ZAD2 DROP VARIABLE MV_EMPID;
ALTER MODULE ZAD2 PUBLISH VARIABLE MV_EMPID ANCHOR DB2HR.EMPLOYEES.EMPLOYEE_ID;
-- ALTER MODULE ZAD2 ADD NOT WORKING
-- ALTER MODULE ZAD2 ADD VARIABLE MV_EMPID ANCHOR DB2HR.EMPLOYEES.EMPLOYEE_ID;

BEGIN
 SET FN3MI0700050.ZAD2.MV_EMPID = 100;
 CALL DBMS_OUTPUT.PUT_LINE('EMP NUMBER IS:' || FN3MI0700050.ZAD2.MV_EMPID);
END;

--- функцията по подаден номер на отдел да връща средна заплата на служителите
-- в отдела (схемата е DB2HR)

ALTER MODULE ZAD2 PUBLISH
    FUNCTION F_DEPT_AVG_SAL(IN P_DEPTID ANCHOR DB2HR.EMPLOYEES.DEPARTMENT_ID) RETURNS DECIMAL(9,1);

ALTER MODULE ZAD2 ADD
    FUNCTION F_DEPT_AVG_SAL(IN P_DEPTID ANCHOR DB2HR.EMPLOYEES.DEPARTMENT_ID)
        RETURNS DECIMAL(9,1)
    RETURN (SELECT AVG(SALARY) FROM DB2HR.EMPLOYEES WHERE DEPARTMENT_ID=P_DEPTID);

ALTER MODULE ZAD2 PUBLISH VARIABLE MV_DEPTID ANCHOR DB2HR.EMPLOYEES.DEPARTMENT_ID;
SET FN3MI0700050.ZAD2.MV_DEPTID = ?;

BEGIN
    DECLARE V_DEPTNAME ANCHOR DB2HR.DEPARTMENTS.DEPARTMENT_NAME;
    SET FN3MI0700050.ZAD2.MV_DEPTID = ?;
    SET V_DEPTNAME = (SELECT UPPER(DEPARTMENT_NAME)
                      FROM DB2HR.DEPARTMENTS WHERE DEPARTMENT_ID = FN3MI0700050.ZAD2.MV_DEPTID);
    CALL DBMS_OUTPUT.PUT_LINE('AVG SALARY FOR DEPARTMENT ' || V_DEPTNAME ||
        ' IS ' || FN3MI0700050.ZAD2.F_DEPT_AVG_SAL(FN3MI0700050.ZAD2.MV_DEPTID));
end;

--- процедурата по подаден номер на отдел извежда на екрана име на отдела,
-- минимална заплата за този отдел, максимална заплата за този отдел и средната заплата
-- на всички служители, чиято заплата е над средната за отдела
-- (използвайте функцията от предходната подточка)
ALTER MODULE ZAD2 DROP PROCEDURE P_EMP_INFO;

ALTER MODULE ZAD2 PUBLISH
    PROCEDURE P_EMP_INFO(IN P_DEPTID ANCHOR DB2HR.EMPLOYEES.DEPARTMENT_ID)
              RESULT SETS 1;

ALTER MODULE ZAD2 ADD
    PROCEDURE P_EMP_INFO(IN P_DEPTID ANCHOR DB2HR.EMPLOYEES.DEPARTMENT_ID)
    RESULT SETS 1
BEGIN
    DECLARE V_DEPTNAME ANCHOR DB2HR.DEPARTMENTS.DEPARTMENT_NAME;
    DECLARE V_MIN_SAL ANCHOR DB2HR.EMPLOYEES.SALARY;
    DECLARE V_MAX_SAL ANCHOR DB2HR.EMPLOYEES.SALARY;
    DECLARE V_AVG_SAL ANCHOR DB2HR.EMPLOYEES.SALARY;
    DECLARE V_EMP_CNT INT;
    DECLARE C CURSOR WITH RETURN FOR SELECT FIRST_NAME || ' ' || LAST_NAME AS EMPNAME, SALARY
                                     FROM DB2HR.EMPLOYEES
                                              WHERE SALARY > V_AVG_SAL AND DEPARTMENT_ID = P_DEPTID ;

    SET V_DEPTNAME = (SELECT UPPER(DEPARTMENT_NAME)
                      FROM DB2HR.DEPARTMENTS WHERE DEPARTMENT_ID = P_DEPTID);


    SELECT MIN(SALARY), MAX(SALARY), COUNT(*) INTO V_MIN_SAL, V_MAX_SAL, V_EMP_CNT
    FROM DB2HR.EMPLOYEES
    WHERE DEPARTMENT_ID = P_DEPTID;

    SET V_AVG_SAL = FN3MI0700050.ZAD2.F_DEPT_AVG_SAL(P_DEPTID);

    OPEN C;

    CALL DBMS_OUTPUT.PUT_LINE('DEPARTMENT NAME IS ' || V_DEPTNAME);
    CALL DBMS_OUTPUT.PUT_LINE('MIN SALARY IS ' || V_MIN_SAL);
    CALL DBMS_OUTPUT.PUT_LINE('MAX SALARY IS ' || V_MAX_SAL);
    CALL DBMS_OUTPUT.PUT_LINE('AVG SALARY IS ' || V_AVG_SAL);
    CALL DBMS_OUTPUT.PUT_LINE('EMP NUMBER IS ' || V_EMP_CNT);

end;

CALL FN3MI0700050.ZAD2.P_EMP_INFO(?);